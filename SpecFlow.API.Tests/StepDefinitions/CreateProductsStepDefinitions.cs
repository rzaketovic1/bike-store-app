using System;
using System.Net;
using System.Net.Http;
using System.Net.Http.Json;
using System.Threading.Tasks;
using TechTalk.SpecFlow;
using Xunit;

namespace SpecFlow.API.Tests.StepDefinitions;

[Binding]
public class CreateProductStepDefinitions(ScenarioContext scenarioContext)
{
    private readonly ScenarioContext _scenarioContext = scenarioContext;
    private readonly HttpClient _client = new() { BaseAddress = new Uri("https://localhost:5001") };
    private HttpResponseMessage? _response;
    private object? _product;

    [Given(@"I have a product with name ""(.*)"" and price (\d+)")]
    public void GivenIHaveAProduct(string name, int price)
    {
        _product = new
        {
            name = name,
            description = "Generated by SpecFlow",
            price = price,
            pictureUrl = "images/test.png",
            type = "TestType",
            brand = "TestBrand",
            quantityInStock = 10
        };
    }

    [When(@"I send a POST request to /api/products")]
    public async Task WhenISendPostRequest()
    {
        _response = await _client.PostAsJsonAsync("/api/products", _product);
        _scenarioContext["response"] = _response;
    }

    [Then(@"the response status should be (\d+)")]
    public void ThenTheResponseStatusShouldBe(int expectedStatusCode)
    {
        _response = (HttpResponseMessage)_scenarioContext["response"];
        Assert.Equal((HttpStatusCode)expectedStatusCode, _response.StatusCode);
    }

    [Then(@"the product should be returned in the response")]
    public async Task ThenTheProductShouldBeReturnedInTheResponse()
    {
        var returnedProduct = await _response.Content.ReadFromJsonAsync<dynamic>();
        Assert.Equal("Test Product", (string)returnedProduct.name);
    }
}